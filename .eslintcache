[{"E:\\prj\\ourdemy_frontend\\src\\components\\PageFrame.js":"1","E:\\prj\\ourdemy_frontend\\src\\index.js":"2","E:\\prj\\ourdemy_frontend\\src\\components\\YesNoDialog.js":"3","E:\\prj\\ourdemy_frontend\\src\\store\\authen\\index.js":"4","E:\\prj\\ourdemy_frontend\\src\\components\\ComplexCard.js":"5"},{"size":9336,"mtime":1609640444774,"results":"6","hashOfConfig":"7"},{"size":601,"mtime":1609480476111,"results":"8","hashOfConfig":"7"},{"size":1449,"mtime":1609595652943,"results":"9","hashOfConfig":"7"},{"size":5415,"mtime":1609597628295,"results":"10","hashOfConfig":"7"},{"size":2389,"mtime":1609640292595,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"ej66oa",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\prj\\ourdemy_frontend\\src\\components\\PageFrame.js",["24"],"import React, {useState} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {fade, makeStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Collapse from '@material-ui/core/Collapse'\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport {authenSlice, signin, signout} from \"../store/authen\";\r\nimport store from \"../store\";\r\nimport {connect} from \"react-redux\";\r\nimport SignUpDialog from \"./SignUpDialog\";\r\nimport SignInDialog from \"./SignInDialog\";\r\nimport {Menu, MenuItem} from \"@material-ui/core\";\r\nimport {AccountCircle} from \"@material-ui/icons\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    appBar: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        zIndex: 2,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        zIndex: 1,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        marginTop: '70px',\r\n        display: 'flex'\r\n    },\r\n    pageContent: {\r\n        flexGrow: 1,\r\n    },\r\n    btn: {\r\n        marginLeft: '10px',\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\n\r\nconst PageFrame = ({token, categories, children}) => {\r\n    const classes = useStyles();\r\n    const isOpenArray = categories.map((cat, index) => {\r\n        return false\r\n    })\r\n\r\n    const [itemOpen, setItemOpen] = useState(isOpenArray);\r\n    const [signUpDialogOpen, setSignUpDialogOpen] = useState(false);\r\n    const [signInDialogOpen, setSignInDialogOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    const toggleItem = (index, open) => {\r\n        const itemOpenCopy = [...itemOpen]\r\n        itemOpenCopy[index] = open\r\n        setItemOpen(itemOpenCopy)\r\n    }\r\n\r\n    const closeMenu = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const closeAndNav = (path) => {\r\n        setAnchorEl(null)\r\n        history.push(`/${path}`)\r\n    }\r\n\r\n    const navCat = (path) => {\r\n        history.push(`/cat/${path}`)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Typography className={classes.title} variant=\"h4\" noWrap>\r\n                        Ourdemy\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon/>\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Searchâ€¦\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{'aria-label': 'search'}}\r\n                        />\r\n                    </div>\r\n                    {!token ? <div>\r\n                        <Button className={classes.btn}\r\n                                onClick={() => setSignInDialogOpen(true)}\r\n                                color=\"inherit\">Log In</Button>\r\n                        <Button className={classes.btn}\r\n                                color=\"inherit\" onClick={() => setSignUpDialogOpen(true)}>Sign Up</Button>\r\n                    </div> : <div>\r\n                        <IconButton className={classes.btn} aria-controls=\"simple-menu\" aria-haspopup=\"true\"\r\n                                    color=\"inherit\" onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n                            <AccountCircle/>\r\n                        </IconButton>\r\n                    </div>}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                anchor=\"left\"\r\n            >\r\n                <div className={classes.toolbar}/>\r\n                <Divider/>\r\n                <List>\r\n                    {categories.map((cat, index) => (\r\n                        <div key={cat.cid}>\r\n                            <ListItem button>\r\n                                <ListItemText primary={cat.cat_name} onClick={() => navCat(cat.cat_name)}/>\r\n                                <div role=\"button\" onClick={(e) => toggleItem(index, !itemOpen[index])}>\r\n                                    {itemOpen[index] ? <IconExpandLess/> :\r\n                                        <IconExpandMore/>}\r\n                                </div>\r\n                            </ListItem>\r\n                            {\r\n                                cat.subcats ?\r\n                                    <Collapse in={itemOpen[index]} timeout=\"auto\" unmountOnExit>\r\n                                        <Divider/>\r\n                                        <List component=\"div\" disablePadding>\r\n                                            {cat.subcats.map((sub, index) => (\r\n                                                <ListItem button key={sub.scid}>\r\n                                                    <ListItemText inset\r\n                                                                  onClick={() => navCat(`${cat.cat_name}/${sub.subcat_name}`)}\r\n                                                                  primary={sub.subcat_name}/>\r\n                                                </ListItem>\r\n                                            ))}\r\n                                        </List>\r\n                                    </Collapse>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    ))}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.pageContent}>\r\n                    {children}\r\n                </div>\r\n            </main>\r\n            <SignUpDialog open={signUpDialogOpen} onClose={() => {\r\n                setSignUpDialogOpen(false)\r\n                store.dispatch(authenSlice.actions.resetSignUpState())\r\n            }}/>\r\n            <SignInDialog open={signInDialogOpen} onClose={() => {\r\n                setSignInDialogOpen(false)\r\n                store.dispatch(authenSlice.actions.resetSignInState())\r\n            }}/>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={closeMenu}\r\n            >\r\n                <MenuItem onClick={() => closeAndNav('profile')}>Profile</MenuItem>\r\n                <MenuItem onClick={() => {\r\n                    closeMenu()\r\n                    store.dispatch(signout())\r\n                }}>Logout</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    token: state.authen.token,\r\n    categories: state.cat.category\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(PageFrame);",["25","26"],"E:\\prj\\ourdemy_frontend\\src\\index.js",["27"],"E:\\prj\\ourdemy_frontend\\src\\components\\YesNoDialog.js",[],"E:\\prj\\ourdemy_frontend\\src\\store\\authen\\index.js",[],"E:\\prj\\ourdemy_frontend\\src\\components\\ComplexCard.js",["28","29","30","31"],{"ruleId":"32","severity":1,"message":"33","line":21,"column":22,"nodeType":"34","messageId":"35","endLine":21,"endColumn":28},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"32","severity":1,"message":"40","line":5,"column":8,"nodeType":"34","messageId":"35","endLine":5,"endColumn":23},{"ruleId":"32","severity":1,"message":"41","line":3,"column":8,"nodeType":"34","messageId":"35","endLine":3,"endColumn":12},{"ruleId":"32","severity":1,"message":"42","line":9,"column":8,"nodeType":"34","messageId":"35","endLine":9,"endColumn":16},{"ruleId":"32","severity":1,"message":"43","line":15,"column":8,"nodeType":"34","messageId":"35","endLine":15,"endColumn":17},{"ruleId":"32","severity":1,"message":"44","line":16,"column":8,"nodeType":"34","messageId":"35","endLine":16,"endColumn":22},"no-unused-vars","'signin' is defined but never used.","Identifier","unusedVar","no-native-reassign",["45"],"no-negated-in-lhs",["46"],"'reportWebVitals' is defined but never used.","'clsx' is defined but never used.","'Collapse' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]