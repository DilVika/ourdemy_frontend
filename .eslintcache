[{"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/index.js":"1","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/category/index.js":"2","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/AuthRoute.js":"3","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/authen/index.js":"4","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/pages/home.js":"5","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/PageFrame.js":"6","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/SignUpDialog.js":"7","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/ComplexCard.js":"8","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/App.js":"9","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/LecturerRoute.js":"10","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/YesNoDialog.js":"11","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/SignInDialog.js":"12","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/pages/Profile.js":"13","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/index.js":"14","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/pages/NotFound.js":"15","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/PaperTest.js":"16","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/CCarousel.js":"17"},{"size":601,"mtime":1609612032292,"results":"18","hashOfConfig":"19"},{"size":1003,"mtime":1609612032295,"results":"20","hashOfConfig":"19"},{"size":543,"mtime":1609612032290,"results":"21","hashOfConfig":"19"},{"size":5249,"mtime":1609612032294,"results":"22","hashOfConfig":"19"},{"size":1601,"mtime":1609620931906,"results":"23","hashOfConfig":"19"},{"size":8679,"mtime":1609616779329,"results":"24","hashOfConfig":"19"},{"size":9449,"mtime":1609612032291,"results":"25","hashOfConfig":"19"},{"size":2562,"mtime":1609619977469,"results":"26","hashOfConfig":"19"},{"size":1179,"mtime":1609615655273,"results":"27","hashOfConfig":"19"},{"size":599,"mtime":1609612032290,"results":"28","hashOfConfig":"19"},{"size":1399,"mtime":1609612032292,"results":"29","hashOfConfig":"19"},{"size":4034,"mtime":1609612032291,"results":"30","hashOfConfig":"19"},{"size":12719,"mtime":1609612820563,"results":"31","hashOfConfig":"19"},{"size":275,"mtime":1609612032295,"results":"32","hashOfConfig":"19"},{"size":1420,"mtime":1609612032293,"results":"33","hashOfConfig":"19"},{"size":542,"mtime":1609619573274,"results":"34","hashOfConfig":"19"},{"size":1122,"mtime":1609620683714,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"j4d77n",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/index.js",["75"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {fetchCategories} from \"./store/category\";\nimport store from \"./store\";\n\nrequire('dotenv').config()\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\nstore.dispatch(fetchCategories())\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["76","77"],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/category/index.js",["78","79"],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/AuthRoute.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/authen/index.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/pages/home.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/PageFrame.js",["80"],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/SignUpDialog.js",["81"],"import React, {useRef} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {AppBar, CircularProgress, makeStyles} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport store from \"../store\";\nimport {authenSlice, otpConfirm, signup} from \"../store/authen\";\nimport {connect} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        flex: 1,\n    },\n}));\n\nconst SignUpDialog = ({open, onClose, err, loading, otp, otploading, finish}) => {\n    const classes = useStyles();\n    const nameRef = useRef(\"\")\n    const unameRef = useRef(\"\")\n    const emailRef = useRef(\"\")\n    const passRef = useRef(\"\")\n    const rpassRef = useRef(\"\")\n\n    const otpunameRef = useRef(\"\")\n    const otpRef = useRef(\"\")\n\n    return (\n        <div>\n            {\n                finish ?\n                    <Dialog open={open} onClose={() => onClose()} aria-labelledby=\"form-dialog-title\">\n                        <AppBar className={classes.appBar}>\n                            <Toolbar>\n                                <Typography variant=\"h6\" className={classes.title}>\n                                    Sign up finished\n                                </Typography>\n                            </Toolbar>\n                        </AppBar>\n                        <DialogActions>\n                            <Button onClick={() => onClose()} color=\"primary\">\n                                Ok\n                            </Button>\n                        </DialogActions>\n                    </Dialog> : !otp ?\n                    <Dialog open={open} onClose={() => onClose()} aria-labelledby=\"form-dialog-title\">\n                        <AppBar className={classes.appBar}>\n                            <Toolbar>\n                                <Typography variant=\"h6\" className={classes.title}>\n                                    Sign up\n                                </Typography>\n                            </Toolbar>\n                        </AppBar>\n                        <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Full name\"\n                                type=\"text\"\n                                inputRef={nameRef}\n                                fullWidth\n                            />\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"username\"\n                                label=\"username\"\n                                type=\"text\"\n                                inputRef={unameRef}\n                                fullWidth\n                            />\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"email\"\n                                label=\"Email\"\n                                type=\"email\"\n                                inputRef={emailRef}\n                                fullWidth\n                            />\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                inputRef={passRef}\n                                fullWidth\n                            />\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"rpassword\"\n                                label=\"Repeat Password\"\n                                type=\"password\"\n                                inputRef={rpassRef}\n                                fullWidth\n                            />\n                            {err ? <DialogContentText>\n                                <Typography color='error' component={'span'}>\n                                    {err}\n                                </Typography>\n                            </DialogContentText> : null}\n                        </DialogContent>\n                        <DialogActions>\n                            {!loading ? <div>\n                                <Button onClick={() => store.dispatch(authenSlice.actions.otpMode())} color=\"primary\">\n                                    Otp\n                                </Button>\n                                <Button onClick={() => onClose()} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                <Button\n                                    onClick={\n                                        () => store.dispatch(\n                                            signup({\n                                                \"name\": nameRef.current.value,\n                                                \"username\": unameRef.current.value,\n                                                \"email\": emailRef.current.value,\n                                                \"password\": passRef.current.value,\n                                                \"repeatPassword\": rpassRef.current.value,\n                                            })\n                                        )\n                                    }\n                                    color=\"primary\">\n                                    Sign up\n                                </Button>\n                            </div> : <div>\n                                <CircularProgress/>\n                            </div>}\n                        </DialogActions>\n                    </Dialog>\n                    : <Dialog open={open} onClose={() => onClose()} aria-labelledby=\"form-dialog-title\">\n                        <AppBar className={classes.appBar}>\n                            <Toolbar>\n                                <Typography variant=\"h6\" className={classes.title}>\n                                    OTP\n                                </Typography>\n                            </Toolbar>\n                        </AppBar>\n                        <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"username\"\n                                label=\"username\"\n                                type=\"text\"\n                                inputRef={otpunameRef}\n                                fullWidth\n                            />\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"username\"\n                                label=\"otp\"\n                                type=\"text\"\n                                inputRef={otpRef}\n                                fullWidth\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            {!otploading ? <div>\n                                <Button onClick={() => store.dispatch(authenSlice.actions.signupMode())}\n                                        color=\"primary\">\n                                    Switch to Sign up\n                                </Button>\n                                <Button onClick={() => onClose()} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                <Button\n                                    onClick={\n                                        () => store.dispatch(\n                                            otpConfirm({\n                                                \"username\": otpunameRef.current.value,\n                                                \"otp\": otpRef.current.value,\n                                            })\n                                        )\n                                    }\n                                    color=\"primary\">\n                                    Confirm\n                                </Button>\n                            </div> : <div>\n                                <CircularProgress/>\n                            </div>}\n                        </DialogActions>\n                    </Dialog>\n            }\n        </div>\n    );\n}\n\nSignUpDialog.defaultProps = {\n    open: false,\n    err: null,\n    loading: false,\n    otp: false,\n    otploading: false,\n    finish: false\n}\n\nconst mapStateToProps = state => ({\n    err: state.authen.signUpErr,\n    loading: state.authen.signingUp,\n    otp: state.authen.shouldOtp,\n    otploading: state.authen.otping,\n    finish: state.authen.signingUpFinish,\n})\n\nexport default connect(\n    mapStateToProps\n)(SignUpDialog)","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/ComplexCard.js",["82","83","84","85","86"],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/App.js",["87"],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/LecturerRoute.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/YesNoDialog.js",[],["88","89"],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/SignInDialog.js",["90"],"import {AppBar, CircularProgress, makeStyles} from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport store from \"../store\";\nimport {authenSlice, signin, signup} from \"../store/authen\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport React, {useRef} from \"react\";\nimport {connect} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        flex: 1,\n    },\n}));\n\nconst SignInDialog = ({open, onClose, err, loading, finish}) => {\n    const classes = useStyles();\n\n    const unameRef = useRef(\"\");\n    const passRef = useRef(\"\");\n\n    return (\n        finish ? <Dialog open={open} onClose={() => onClose()} aria-labelledby=\"form-dialog-title\">\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Sign in finished\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <DialogActions>\n                    <Button onClick={() => onClose()} color=\"primary\">\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog> :\n        <Dialog open={open} onClose={() => onClose()} aria-labelledby=\"form-dialog-title\">\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Sign In\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"username\"\n                    label=\"username\"\n                    type=\"text\"\n                    inputRef={unameRef}\n                    fullWidth\n                />\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    inputRef={passRef}\n                    fullWidth\n                />\n                {err ? <DialogContentText>\n                    <Typography color='error' component={'span'}>\n                        {err}\n                    </Typography>\n                </DialogContentText> : null}\n            </DialogContent>\n            <DialogActions>\n                {!loading ? <div>\n                    <Button onClick={() => store.dispatch(authenSlice.actions.otpMode())} color=\"secondary\">\n                        Reset Password\n                    </Button>\n                    <Button onClick={() => onClose()} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button\n                        onClick={\n                            () => store.dispatch(\n                                signin({\n                                    \"username\": unameRef.current.value,\n                                    \"password\": passRef.current.value,\n                                })\n                            )\n                        }\n                        color=\"primary\">\n                        Sign In\n                    </Button>\n                </div> : <div>\n                    <CircularProgress/>\n                </div>}\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nconst mapStateToProps = state => ({\n    err: state.authen.signInErr,\n    loading: state.authen.signingIn,\n    finish: state.authen.signingInFinish,\n})\n\nexport default connect(\n    mapStateToProps\n)(SignInDialog)","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/pages/Profile.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/index.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/pages/NotFound.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/PaperTest.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/CCarousel.js",["91"],{"ruleId":"92","severity":1,"message":"93","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":23},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"92","severity":1,"message":"100","line":6,"column":9,"nodeType":"94","messageId":"95","endLine":6,"endColumn":15},{"ruleId":"92","severity":1,"message":"101","line":7,"column":9,"nodeType":"94","messageId":"95","endLine":7,"endColumn":12},{"ruleId":"92","severity":1,"message":"100","line":21,"column":22,"nodeType":"94","messageId":"95","endLine":21,"endColumn":28},{"ruleId":"92","severity":1,"message":"102","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":19},{"ruleId":"92","severity":1,"message":"103","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":12},{"ruleId":"92","severity":1,"message":"104","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":16},{"ruleId":"92","severity":1,"message":"105","line":15,"column":8,"nodeType":"94","messageId":"95","endLine":15,"endColumn":17},{"ruleId":"92","severity":1,"message":"106","line":16,"column":8,"nodeType":"94","messageId":"95","endLine":16,"endColumn":22},{"ruleId":"92","severity":1,"message":"107","line":18,"column":10,"nodeType":"94","messageId":"95","endLine":18,"endColumn":15},{"ruleId":"92","severity":1,"message":"108","line":6,"column":5,"nodeType":"94","messageId":"95","endLine":6,"endColumn":9},{"ruleId":"96","replacedBy":"109"},{"ruleId":"98","replacedBy":"110"},{"ruleId":"92","severity":1,"message":"111","line":10,"column":30,"nodeType":"94","messageId":"95","endLine":10,"endColumn":36},{"ruleId":"92","severity":1,"message":"112","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":19},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"'signin' is defined but never used.","'act' is defined but never used.","'DialogTitle' is defined but never used.","'clsx' is defined but never used.","'Collapse' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Paper' is defined but never used.","'Link' is defined but never used.",["113"],["114"],"'signup' is defined but never used.","'ComplexCard' is defined but never used.","no-global-assign","no-unsafe-negation"]