[{"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/pages/home.js":"1","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/PageFrame.js":"2","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/ComplexCard.js":"3","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/reportWebVitals.js":"4","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/index.js":"5","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/authen/index.js":"6","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/App.js":"7"},{"size":2232,"mtime":1609611348894,"results":"8","hashOfConfig":"9"},{"size":7717,"mtime":1609531279782,"results":"10","hashOfConfig":"9"},{"size":2309,"mtime":1609611074504,"results":"11","hashOfConfig":"9"},{"size":409,"mtime":1609425745500,"results":"12","hashOfConfig":"9"},{"size":207,"mtime":1609438073944,"results":"13","hashOfConfig":"9"},{"size":661,"mtime":1609438073944,"results":"14","hashOfConfig":"9"},{"size":596,"mtime":1609438091088,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j4d77n",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/pages/home.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/PageFrame.js",["34","35","36"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconExpandLess from \"@material-ui/icons/ExpandLess\";\nimport IconExpandMore from \"@material-ui/icons/ExpandMore\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { authenSlice, signin } from \"../store/authen\";\nimport store from \"../store\";\nimport { connect } from \"react-redux\";\n\nimport Slide from '@material-ui/core/Slide';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nimport PropTypes from 'prop-types';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    zIndex: 2,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    zIndex: 1,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    marginTop: \"70px\",\n  },\n  btn: {\n    marginLeft: \"10px\",\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n}));\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\n\nconst dummyCat = [\n  {\n    cid: \"1A\",\n    cat_name: \"Game\",\n    subcat: [\n      {\n        cid: \"1B\",\n        subcat_name: \"TW3\",\n      },\n      {\n        cid: \"2B\",\n        subcat_name: \"Genshin\",\n      },\n    ],\n  },\n  {\n    cid: \"2A\",\n    cat_name: \"Cats\",\n  },\n];\n\nconst PageFrame = ({ token, children }) => {\n  console.log(token);\n\n  const classes = useStyles();\n  const isOpenArray = dummyCat.map((cat, index) => {\n    if (cat.subcat) return { open: false, shouldShowIcon: true };\n    return { open: false, shouldShowIcon: false };\n  });\n  const [itemOpen, setItemOpen] = useState(isOpenArray);\n\n  const toggleItem = (index, open) => {\n    const itemOpenCopy = [...itemOpen];\n    itemOpenCopy[index].open = open;\n    setItemOpen(itemOpenCopy);\n  };\n\n  const history = useHistory();\n\n  const nav = (path) => {\n    history.push(`/cat/${path}`);\n  };\n\n  const onSigninClick = (username, password) => {\n    store.dispatch(signin({ username, password }));\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <HideOnScroll >\n      <AppBar position=\"fixed\" >\n        <Toolbar>\n         \n          <Typography className={classes.title} variant=\"h5\" noWrap>\n            Ourdemy\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Searchâ€¦\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          {!token ? (\n            <div>\n              <Button\n                className={classes.btn}\n                onClick={() => onSigninClick(\"a\", \"b\")}\n                color=\"inherit\"\n              >\n                Log In\n              </Button>\n              <Button className={classes.btn} color=\"inherit\">\n                Sign Up\n              </Button>\n            </div>\n          ) : null}\n        </Toolbar>\n      </AppBar>\n      </HideOnScroll>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {dummyCat.map((cat, index) => (\n            <div key={cat.cid}>\n              <ListItem button>\n                <ListItemText\n                  primary={cat.cat_name}\n                  onClick={() => nav(cat.cat_name)}\n                />\n                <div\n                  role=\"button\"\n                  onClick={(e) => toggleItem(index, !itemOpen[index].open)}\n                >\n                  {itemOpen[index].shouldShowIcon ? (\n                    itemOpen[index].open ? (\n                      <IconExpandLess />\n                    ) : (\n                      <IconExpandMore />\n                    )\n                  ) : null}\n                </div>\n              </ListItem>\n              {cat.subcat ? (\n                <Collapse\n                  in={itemOpen[index].open}\n                  timeout=\"auto\"\n                  unmountOnExit\n                >\n                  <Divider />\n                  <List component=\"div\" disablePadding>\n                    {cat.subcat.map((sub, index) => (\n                      <ListItem button key={sub.cid}>\n                        <ListItemText\n                          inset\n                          onClick={() =>\n                            nav(`${cat.cat_name}/${sub.subcat_name}`)\n                          }\n                          primary={sub.subcat_name}\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Collapse>\n              ) : null}\n            </div>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.authen.token,\n});\n\nexport default connect(mapStateToProps)(PageFrame);\n",["37","38"],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/components/ComplexCard.js",["39","40","41","42"],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/reportWebVitals.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/index.js",[],"/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/store/authen/index.js",["43","44","45"],"import axios from 'axios';\nimport {\n    createSlice,\n    configureStore,\n    createAsyncThunk,\n} from '@reduxjs/toolkit';\nimport {act} from \"@testing-library/react\";\n\nconst initialState = {\n    token: null\n};\n\nexport const signin = createAsyncThunk(\n    'authen/signin',\n    async (userData, thunkAPI) => {\n        // const response = await axios.get(`/api/${type}`);\n        return {\"token\": \"abc123\"};\n    },\n);\n\nexport const authenSlice = createSlice({\n    name: 'authen',\n    initialState: initialState,\n    reducers: {},\n    extraReducers: {\n        [signin.fulfilled]: (state, action) => {\n            state.token = action.payload.token\n        }\n    }\n})","/Users/dilvika/Documents/Projects/HCMUS/AWeb/Ourdemy/ourdemy_frontend/src/App.js",["46","47"],"import React, {createContext} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nimport './App.css';\nimport Home from \"./pages/home\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home/>\n                    </Route>\n                </Switch>\n            </Router>\n        </Provider>\n    );\n}\n\nstore.subscribe(App)\n\nexport default App;\n",{"ruleId":"48","severity":1,"message":"49","line":14,"column":8,"nodeType":"50","messageId":"51","endLine":14,"endColumn":18},{"ruleId":"48","severity":1,"message":"52","line":15,"column":8,"nodeType":"50","messageId":"51","endLine":15,"endColumn":16},{"ruleId":"48","severity":1,"message":"53","line":22,"column":10,"nodeType":"50","messageId":"51","endLine":22,"endColumn":21},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"48","severity":1,"message":"58","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":12},{"ruleId":"48","severity":1,"message":"59","line":9,"column":8,"nodeType":"50","messageId":"51","endLine":9,"endColumn":16},{"ruleId":"48","severity":1,"message":"60","line":15,"column":8,"nodeType":"50","messageId":"51","endLine":15,"endColumn":17},{"ruleId":"48","severity":1,"message":"61","line":16,"column":8,"nodeType":"50","messageId":"51","endLine":16,"endColumn":22},{"ruleId":"48","severity":1,"message":"62","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"48","severity":1,"message":"63","line":4,"column":5,"nodeType":"50","messageId":"51","endLine":4,"endColumn":19},{"ruleId":"48","severity":1,"message":"64","line":7,"column":9,"nodeType":"50","messageId":"51","endLine":7,"endColumn":12},{"ruleId":"48","severity":1,"message":"65","line":1,"column":16,"nodeType":"50","messageId":"51","endLine":1,"endColumn":29},{"ruleId":"48","severity":1,"message":"66","line":6,"column":5,"nodeType":"50","messageId":"51","endLine":6,"endColumn":9},"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'MenuIcon' is defined but never used.","'authenSlice' is defined but never used.","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'clsx' is defined but never used.","'Collapse' is defined but never used.","'ShareIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'axios' is defined but never used.","'configureStore' is defined but never used.","'act' is defined but never used.","'createContext' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]